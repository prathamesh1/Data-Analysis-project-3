data <- read.csv("X:/Berry/SpeedDating/Speed Dating Data.csv", header=FALSE)
View(data)
dating[c('dec','attr')]
dating<-data
dating[c('dec','attr')]
dating<-read.csv('Speed Dating Data.csv')
data<-dating[c('dec','attr')]
which(is.na(data$attr))
install.packages("dplyr")
library("dplyr", lib.loc="~/R/win-library/3.3")
data%>%
filter(!is.na(attr))
data<-data%>%
filter(!is.na(attr))
dim(data)
set.seed(1)
indices<-sample(8176,4088,replace=FALSE)
head(indices)
train<-data[indices,]
test<-data[-indices,]
dim(train)
dim(test)
data$yn<-'yes'
head(data)
which(data$dec==0)
data$yn[which(data$dec==0)]<-'no'
head(data)
factor(data$yn,levels=c('yes','no'))
data$yn<-factor(data$yn,levels=c('yes','no'))
set.seed(1)
indices<-sample(8176,4088,replace=FALSE)
train<-data[indices,]
test<-data[-indices,]
head(train)
glm(attr~dec,data=train,family='binomial')
glm(dec~attr,data=train,family='binomial')
f<-function(x){
return(1/(1+exp(-4.6818+0.6879*x)))
}
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
ggplot()+
geom_point(data=train,aes(x=attr,y=dec),position=position_jitter(height = 0.1))
glm(yn~attr,data=train,family='binomial')
f<-function(x){
return(1/(1+exp(4.6818-0.6879*x)))
}
domain<-c(0:10)
domain<-data.frame(x=c(0:10))
ggplot()+
geom_point(data=train,aes(x=attr,y=dec),position=position_jitter(height = 0.1))+
stat_function(data=domain,aes(x=x),fun=f)
ggplot()+
geom_point(data=test,aes(x=attr,y=dec),position=position_jitter(height = 0.1))+
stat_function(data=domain,aes(x=x),fun=f)
which(f(test$attr)>=0.5)
which(f(test$attr)<0.5)
test$classification<-no
test$classification<-'no'
test$classification[which(f(test$attr)>=0.5)]<-'yes'
head(test)
classify<-function(x){
return(as.numeric(f(x)>=.5))
}
test$classification<-classify(test$attr)
head(test)
which(test$dec!=test!classification)
which(test$dec!=test$classification)
count(which(test$dec!=test$classification))
length(which(test$dec!=test$classification))
1121/4088
dating<-read.csv('Speed Dating Data.csv')
str(dating)
data<-dating[c('dec','like')]
data$yn<-'yes'
indices<-which(data$dec==0)
data$yn[indices]<-'no'
library("dplyr", lib.loc="~/R/win-library/3.3")
data<-data%>%
filter(!is.na(like))
str.seed(1)
set.seed(1)
dim(data)
8138/2
indices<-sample(8138,4069,replace=FALSE)
train<-data[indices,]
test<-data[-indices,]
glm(yn~like,data=data,family='binomial')
glm(like~yn,data=data,family='binomial')
glm(yn~like,data=data,family='binomial')
data$yn<-factor(data$yn,levels=c('yes','no'))
data<-data%>%
filter(!is.na(like))
set.seed(1)
indices<-sample(8138,4069,replace=FALSE)
train<-data[indices,]
test<-data[-indices,]
glm(yn~like,data=data,family='binomial')
glm(yn~like,data=train,family='binomial')
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.3")
f<-function(x){
return(1/(1+exp(5.6539-0.8464*x)))
}
domain<-data.frame(x=c(0,10))
ggplot()+
geom_point(data=test,aes(x=like,y=dec),position=position_jitter(height=0.1))+
stat_function(data=domain,aes(x=x),fun=f)
classify<-function(x){
as.numeric(f(x)>=.5)
}
data$classification<-classify(test$like)
test$classification<-classify(test$like)
data$classification<-NULL
tp<-length(which(dec==1 & classification==1))
tp<-length(which(test$dec==1 & classification==1))
tp<-length(which(test$dec==1 & test$classification==1))
fp<-length(which(test$dec==0 & test$classification==1))
tn<-length(which(test$dec==0 & test$classification==0))
fn<-length(which(test$dec==1 & test$classification==0))
pp<-tp+fp
pn<-tn+fn
p<-tp+fn
n<-tn+fp
M<-matrix(,nrow=3,ncol=3)
M
M[1,1]
rownames(M)<-c('predicted positive','predicted negative','')
colnames(M)<-c('positive','negative','')
M
M[1,1]<-tp
M[1,2]<-fp
M[1,3]<-p
M[2,1]<-fn
M[2,2]<-tn
M[2,3]<-n
M[3,1]<-pp
M[3,2]<-pn
M[3,3]<-p+n
M
M[1,1]<-tp
M[1,2]<-fp
M[1,3]<-pp
M[2,1]<-fn
M[2,2]<-tn
M[2,3]<-pn
M[3,1]<-p
M[3,2]<-n
M[3,3]<-p+n
M
dating<-dating[.c('dec','attr','sinc','intel','fun','amb','shar','like')]
dating<-na.omit(dating)
dating<-read.csv("Speed Dating Data.csv")
dating<-dating[.c('dec','attr','sinc','intel','fun','amb','shar','like')]
dating<-read.csv("Speed Dating Data.csv")
dating<-dating[,c('dec','attr','sinc','intel','fun','amb','shar','like')]
dating<-na.omit(dating)
dating$dec<-factor(dating$dec,levels=c(0,1))
set.seed(1)
indices<-sample(7017,3508)
train<-dating[indices,]
test<-dating[-indices,]
glm(dec~attr+sinc+intel+fun+amb+shar+like,family='binomial')
glm(dec~attr+sinc+intel+fun+amb+shar+like,data=train,family='binomial')
fit<-glm(dec~attr+sinc+intel+fun+amb+shar+like,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$prediction<-"no"
test$prediction[which(test$probabilities>0.5)]<-"yes"
count(which(test$probabilities>0.5))
lenth(which(test$probabilities>0.5))
which(test$probabilities>0.5)
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
sum(test$classification)
dim(test)
1494/3509
length(which(test$dec==test$classification))
2699/3509
fit<-glm(dec~.-intel,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
fit<-glm(dec~.-like,data=train,family='binomial')
fit<-glm(dec~attr+sinc+intel+fun+amb+shar+like,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
fit<-glm(dec~.-like,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
fit<-glm(dec~.-amb,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
fit<-glm(dec~.-attr,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
fit<-glm(dec~.-fun,data=train,family='binomial')
test$probabilities<-predict(fit,newdata=test,type='response')
test$classification<-0
test$classification[which(test$probabilities>0.5)]<-1
length(which(test$dec==test$classification))
data <- read.csv("X:/Berry/SpeedDating/Speed Dating Data.csv", header=FALSE)
View(data)
data[c('dec','attr','sinc','intel','fun','amb','shar','like')]
head(data)
data<-data[c('dec','attr','sinc','intel','fun','amb','shar','like')]
head(data)
test<-data[c('dec','like')]
data<-read.csv('Speed Dating Data.csv')
data<-data[c('dec','attr','sinc','intel','fun','amb','shar','like')]
data$dec<-factor(data$dec,levels=c(0,1))
set.seed(1)
indices<-sample(8378,4189,replace=TRUE)
indices<-sample(8378,4189,replace=FALSE)
train<-data[indices,]
test<-data[-indices,]
dataTree<-tree(dec~.,data=train,split='gini')
install.packages("tree")
library("tree", lib.loc="~/R/win-library/3.3")
dataTree<-tree(dec~.,data=train,split='gini')
plot(dataTree)
text(dataTree)
cv.tree(dataTree, FUN=prune_misclass)
cv.tree(dataTree, FUN=prune.misclass)
prune.tree(dataTree,method='misclass',best=3)
pruneDataTree<-prune.tree(dataTree,method='misclass',best=3)
plot(pruneDataTree)
text(pruneDataTree)
predict(pruneDataTree,newdata = test,type='class')
test$prediction<-predict(pruneDataTree,newdata = test,type='class')
length(which(test$prediction!=test$dec))
1000/4189
